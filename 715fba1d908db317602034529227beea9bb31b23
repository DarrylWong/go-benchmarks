{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c946268_e5dfee7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-21T22:45:23Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d715fba1d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "800cde96_f30e3043",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-21T22:47:21Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "6c946268_e5dfee7e",
      "tag": "autogenerated:trybots~happy",
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52690e6b_e90ee836",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-03T21:22:56Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d715fba1d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "948829d8_80b74c57",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-01-20T17:05:47Z",
      "side": 1,
      "message": "No comparison happens automatically. Should this just be called \"both\"?",
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72cd4b16_1c6dc42a",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-12-21T22:46:48Z",
      "side": 1,
      "message": "this needs to be cleaner. perhaps the count message should be pushed down one level, where we actually generate the additional configs.",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 399,
        "endChar": 2
      },
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff07ee69_428bf573",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-01-20T17:05:47Z",
      "side": 1,
      "message": "I agree.\n\n-trace\u003dcompare is conceptually quite similar to -pgo. However, the way it is plumbed through is quite different. -pgo adds additional `common.Config`s to the set, while -trace\u003dcompare adds to `setups` (one layer down).\n\nI don\u0027t have a preference for either approach in particular, but it seems that -trace and -pgo should agree on which level they operate at.",
      "parentUuid": "72cd4b16_1c6dc42a",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 399,
        "endChar": 2
      },
      "revId": "715fba1d908db317602034529227beea9bb31b23",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}