{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0ccb0b_0afc1209",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-18T14:45:01Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9432c902\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba7f160d_b1ce114d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-18T14:45:01Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "692c60cb_3106e9f4",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e92e48b_4cacef46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-18T14:49:00Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "bf0ccb0b_0afc1209",
      "tag": "autogenerated:trybots~happy",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a98872f7_9d89e8f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Have a cleaned up version coming, want to do a round of removing a little more global state, need to be sure it doesn\u0027t perturb the benchmark.",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2515d755_3312e2bc",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "\"warmupMsgs\" or \"warmupCount\" (then you don\u0027t need the comment and the use becomes self-describing)",
      "range": {
        "startLine": 20,
        "startChar": 1,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a58aec6_066a5aa0",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 20,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2515d755_3312e2bc",
      "range": {
        "startLine": 20,
        "startChar": 1,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e090e656_f33e26af",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "Spell the constant 5_000_000 and then you don\u0027t need the comment.",
      "range": {
        "startLine": 21,
        "startChar": 28,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e250b2fc_1e400e27",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "\"runMsgs\" perhaps? Or just \"msgCount\"",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9443a6a_e64f3ebc",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e090e656_f33e26af",
      "range": {
        "startLine": 21,
        "startChar": 28,
        "endLine": 21,
        "endChar": 39
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8832166a_b7f8a676",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 21,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e250b2fc_1e400e27",
      "range": {
        "startLine": 21,
        "startChar": 1,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdde0040_67cd85e2",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 38,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "This is remarkably non-descriptive.",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54ce7e58_b96c1c20",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 38,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdde0040_67cd85e2",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f271e66b_5a01d75b",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "Why not just circularBuffer[count%len(circularBuffer)] then? (In the comment and the code)",
      "range": {
        "startLine": 57,
        "startChar": 3,
        "endLine": 57,
        "endChar": 56
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85162ebf_6a1aa56a",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f271e66b_5a01d75b",
      "range": {
        "startLine": 57,
        "startChar": 3,
        "endLine": 57,
        "endChar": 56
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61c35e98_f715d7d1",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 167,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "Perhaps\n\n    if b !\u003d nil {\n      b.StopTimer()\n    }",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "672aae5c_692f3c2c",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 167,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "I tried that and it seemed to make it hang after running the first benchmark, with count\u003d3. (I killed it after 213 seconds, putting it back lets `go test -run\u003dnope -bench\u003dBench -count\u003d3 .` run all 18 benchmarks in 85 seconds.)",
      "parentUuid": "61c35e98_f715d7d1",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "943e10c3_948c282c",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 167,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-21T18:30:40Z",
      "side": 1,
      "message": "That\u0027s.. troubling, and suggests that there may be some bug in your benchmark. I would put back the StopTimer and figure out why it\u0027s hanging.",
      "parentUuid": "672aae5c_692f3c2c",
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3aeefe1_0e76a371",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "No \".\". Just \"p50-ns\" Percentile is on a scale of 0 to 100. (You may be thinking of quantiles? But nobody will know what q.50 means 😊)",
      "range": {
        "startLine": 176,
        "startChar": 35,
        "endLine": 176,
        "endChar": 39
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adac9c4b_f07b4964",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "What\u0027s your opinion on p999 versus p99.9?\n\nUsing p1.00 instead of \"worst\" makes it sort into an earlier column, which makes me sad, but it is consistent.",
      "parentUuid": "d3aeefe1_0e76a371",
      "range": {
        "startLine": 176,
        "startChar": 35,
        "endLine": 176,
        "endChar": 39
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50113f78_3e7f21a4",
        "filename": "gc_latency/latency.go",
        "patchSetId": 18
      },
      "lineNbr": 176,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-21T18:30:40Z",
      "side": 1,
      "message": "\"pN\" means \"the Nth percentile\", so \"p999\" would mean the 999th percentile. Use \"p99.9\". Likewise, \"p1.00\" means the \"1th percentile\" aka 0.01 quantile. Use \"p100\" (\"worst\" or \"max\" is also fine).\n\nI wouldn\u0027t worry too much about sorting. If it bugs you, I\u0027d probably use \"max\" for p100.",
      "parentUuid": "adac9c4b_f07b4964",
      "range": {
        "startLine": 176,
        "startChar": 35,
        "endLine": 176,
        "endChar": 39
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2566c252_2a486c7c",
        "filename": "gc_latency/latency_test.go",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-18T19:00:34Z",
      "side": 1,
      "message": "Follow convention: how\u003d%s/fluff\u003d%v\n\nThough maybe swap around how and fluff in the name, or change the order of tcs. Typically, if there are multiple /-separated elements in the name it\u0027s because of nested b.Runs, which means the last element changes faster than the earlier element. Right now you\u0027ll get the opposite order.",
      "range": {
        "startLine": 29,
        "startChar": 27,
        "endLine": 29,
        "endChar": 28
      },
      "revId": "9432c902862d7afb58257f81998939dfc607b202",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}