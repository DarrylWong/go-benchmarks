{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5a518bb1_a14f0565",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-08T17:39:04Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db30e46e9\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b30e46e9d67c1a9e0f64cdeed9ab29cef426f2f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6947d3e_ab7ad80d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-08T17:45:28Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5a518bb1_a14f0565",
      "tag": "autogenerated:trybots~happy",
      "revId": "b30e46e9d67c1a9e0f64cdeed9ab29cef426f2f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d8f18e2_4dd1d65a",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-02-08T18:38:16Z",
      "side": 1,
      "message": "\"ensure\" here makes me think this is just validation; sweet will fail if there isn\u0027t both a profile and no-profile version. But based on expandDiagArg, it seems this actually means that it _adds_ a negated version of whichever version exists in the config.\n\nThinking out loud, I suspect the behavior is difficult to describe in flag help. Instead of this \u0027both\u0027 behavior, perhaps we could have a simpler \u0027add\u0027 option which only adds a profiling config if the existing config doesn\u0027t already have profiling. How often do we expect users to want to go the other way?",
      "range": {
        "startLine": 185,
        "startChar": 104,
        "endLine": 185,
        "endChar": 130
      },
      "revId": "b30e46e9d67c1a9e0f64cdeed9ab29cef426f2f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "675bee40_8a6dac3a",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-02-08T19:02:00Z",
      "side": 1,
      "message": "that\u0027s a good point, I don\u0027t think anyone really wants to go the other way (I don\u0027t).\n\nit seems like there are two potential use-cases:\n1. enable profiling in each config\n2. dupe each config and enable profiling in the dupe\n\nso as you suggest (I think) it would be false/true/add.\n\nbut now I wonder if the flags are even all that useful. specifying what you want in the config is way more precise and easier to reason about, both from a code maintenance standpoint and from a user\u0027s standpoint. I feel like the flags are just going to be confusing no matter what.",
      "parentUuid": "0d8f18e2_4dd1d65a",
      "range": {
        "startLine": 185,
        "startChar": 104,
        "endLine": 185,
        "endChar": 130
      },
      "revId": "b30e46e9d67c1a9e0f64cdeed9ab29cef426f2f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fa97de2_be1f959d",
        "filename": "sweet/cmd/sweet/run.go",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-02-08T23:41:53Z",
      "side": 1,
      "message": "I got rid of the flags and added more documentation to `sweet help run`.",
      "parentUuid": "675bee40_8a6dac3a",
      "range": {
        "startLine": 185,
        "startChar": 104,
        "endLine": 185,
        "endChar": 130
      },
      "revId": "b30e46e9d67c1a9e0f64cdeed9ab29cef426f2f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}