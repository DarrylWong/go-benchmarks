{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b52b3647_50fbaed3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-17T17:25:48Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d73dabead\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7f554ec_ad33ce62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-17T17:29:20Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b52b3647_50fbaed3",
      "tag": "autogenerated:trybots~happy",
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "767e8ea5_6064b978",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-05-16T20:11:34Z",
      "side": 1,
      "message": "PTAL?  I think it now behaves like a benchmark.",
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebf6a0be_0563fb63",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-31T15:09:21Z",
      "side": 1,
      "message": "Why all the global state? IMO, it would be easier to follow if this state was local to bench / work.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26524e2a_c301e4b4",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-21T18:23:46Z",
      "side": 1,
      "message": "I think there\u0027s less global state now, saw more places yet to clean this up, will continue.",
      "parentUuid": "ebf6a0be_0563fb63",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315eba02_ec66f7a6",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 109,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-31T15:09:21Z",
      "side": 1,
      "message": "b.N isn\u0027t used. Presumably that should be the count argument to work?",
      "range": {
        "startLine": 109,
        "startChar": 11,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b51e63eb_22131827",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 109,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-14T17:55:45Z",
      "side": 1,
      "message": "I\u0027m not sure that would work, and it could pick numbers that would make the many-9s delays not be sensible (and the many-9s delays are what this benchmark is for).  It started out being a fixed-length benchmark.",
      "parentUuid": "315eba02_ec66f7a6",
      "range": {
        "startLine": 109,
        "startChar": 11,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2d78b4_e14c2824",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 109,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-08-14T21:16:35Z",
      "side": 1,
      "message": "I\u0027m not sure how this should use b.N, but *not* using b.N isn\u0027t really an option. The testing package is going to trying cranking b.N up until the test time goes over some threshold and things are going to get very messed up if the benchmark is completely insensitive to said cranking. I think this is also just going to report a bogus ns/op metric? You can override that with ReportMetric, and it may make sense to override it with your current avg-ns metric.",
      "parentUuid": "b51e63eb_22131827",
      "range": {
        "startLine": 109,
        "startChar": 11,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "764ec04b_4d63f9c8",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 109,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-17T19:59:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab2d78b4_e14c2824",
      "range": {
        "startLine": 109,
        "startChar": 11,
        "endLine": 109,
        "endChar": 12
      },
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42f61d8a_e6b14a24",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-31T15:09:21Z",
      "side": 1,
      "message": "b.Fatalf?",
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43880f55_4a9ecfcd",
        "filename": "gc_latency/latency.go",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-14T17:55:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42f61d8a_e6b14a24",
      "revId": "73dabead55b400d8e121d7f5dd58426ed36fa7bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}